# Upstream definitions
upstream backend {
    server unix:/run/{{ app_name }}-backend.sock fail_timeout=0;
}

upstream frontend {
    least_conn;
    {% for i in range(frontend_instances) %}
    server 127.0.0.1:{{ frontend_port + i }} max_fails=3 fail_timeout=30s;
    {% endfor %}
}

# Redirect HTTP to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name {{ domain_name }} www.{{ domain_name }};

    {% if use_ssl %}
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://$server_name$request_uri;
    }
    {% else %}
    include /etc/nginx/{{ app_name }}.d/*.conf;
    {% endif %}
}

{% if use_ssl %}
# HTTPS Server
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name {{ domain_name }} www.{{ domain_name }};

    # SSL certificates
    ssl_certificate /etc/letsencrypt/live/{{ domain_name }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ domain_name }}/privkey.pem;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline' 'unsafe-eval'" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    include /etc/nginx/{{ app_name }}.d/*.conf;
}
{% endif %}

# Create directory for site-specific configs
# Place the following in a separate file to include above